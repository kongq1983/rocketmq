

事务消息:
DefaultMQProducerImpl

Broker端如何处理事务消息？
SendMessageProcessor#asyncSendMessage

TransactionalMessageBridge

test


# consumer选择MessageQueue策略
AllocateMessageQueueStrategy
默认算法: AllocateMessageQueueAveragely


# broker
this.remotingServer = new NettyRemotingServer(this.nettyServerConfig, this.clientHousekeepingService); // todo 默认8888 broker port
NettyServerConfig fastConfig = (NettyServerConfig) this.nettyServerConfig.clone();
fastConfig.setListenPort(nettyServerConfig.getListenPort() - 2); // todo 默认8888-2=8886

remotingServer和fastRemotingServer的区别：
Broker端：remotingServer可以处理客户端所有请求，如：生产者发送消息的请求，消费者拉取消息的请求。
fastRemotingServer功能基本与remotingServer相同，唯一不同的是不可以处理消费者拉取消息的请求。
Broker在向NameServer注册时，只会上报remotingServer监听的listenPort端口。

客户端：默认情况下，生产者发送消息是请求fastRemotingServer，我们也可以通过配置让其请求remotingServer；消费者拉取消息只能请求remotingServer。

下面通过源码进行验证Broker端构建remotingServer和fastRemotingServer时的区别，以及客户端如何配置

GET_CONSUMER_LIST_BY_GROUP

borker :
SendMessageProcessor (发送单条、批量消息)


company path:
C:\Users\kongqi\store\commitlog\00000000001073741824